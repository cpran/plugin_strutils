# This script is part of the strutils CPrAN plugin for Praat.
# The latest version is available through CPrAN or at
# <http://cpran.net/plugins/strutils>
#
# The strutils plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# The strutils plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with strutils. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2014-2016 Jose Joaquin Atria

include ../../plugin_strutils/procedures/replace_strings.proc

#! ~~~ params
#! in:
#!   .name$: The name of the resulting Strings object
#!   .path$: The path with the files to list
#!   .match$: A string to glob files (as used in the standard commands)
#!   .keep: >
#!     If true, the Strings object with relative names will be kept.
#!     Otherwise it will be removed automatically.
#! out:
#!   .id: ID of the generated Strings object
#!   .absolute: An alias for `.id`
#!   .relative: >
#!     The ID of the Strings object with simple file names. If the object
#!     is destroyed (if `.keep` is false), the variable is set to `undefined`.
#! selection:
#!   out:
#!     strings: 1-2
#! ~~~
#!
#! Same as `Create Strings as file list...` but with full paths. This
#! procedure internally calls that command, and the fate of the Strings
#! object generated by it will depend on the value of `.keep`. If true, the
#! object is kept and its ID stored in `.relative`. If false, it is removed
#! and that variable set to `undefined`.
#!
#! The selection will include all generated tables, in which the one with
#! full paths will be the most recent. The ID of this object will also be
#! stored in `.id`, and in `.absolute`, for contrast with `.relative`.
#!
procedure fileListFullPath (.name$, .path$, .match$, .keep)
  .path$ = .path$ + if right$(.path$) != "/" then "/" else "" fi
  .relative = Create Strings as file list: .name$ + "_relpath",
    ... .path$ + .match$
  .path$ = replace_regex$(.path$, "\\", "/", 0)
  @replaceStrings("^(.*)", .path$ + "\1", 1)
  .id = replaceStrings.id
  Rename: .name$

  if !.keep
    removeObject: .relative
    .relative = undefined
  else
    plusObject: .relative
  endif
  .absolute = .id
endproc
